 	describe 'issues by user' do
 		context 'single user request' do
 			before(:each) do
				@pub = create(:publication)
				@isdesc = []
				@isdesc << create(:issuedescription_list_with_an_issue, publication_id: @pub.id, issue_count: 2, yr: 2001)
				@user = create(:user)
		end
		it "returns http success" do	
 			get :userissues, id: @pub
      expect(response).to have_http_status(:success)
    end
 			
 		it "renders the :userissues template" do
			get :userissues, id: @pub
 			expect(response).to render_template :userissues
 		end
 		
 		it "assigns the requested publication to publication" do
 			get :userissues, id: @pub
 			expect(assigns(:publication)).to eq @pub
 		end
 		
 		it "assigns the requested issuedescriptions to issuedescription" do
 			get :userissues, id: @pub
 			expect(assigns(:issuedescriptions)).to eq @isdesc
 		end
 		
 		it "assigns requested issues to issues" do
 			get :userissues, id: @pub
 			issues_list = @isdesc.inject([]) { |issues_group, issuedesc| issues_group  +  issuedesc.issues }
 			expect(assigns(:issues).to_a).to match_array issues_list
 		end
 		
 		it "finds the issue linked to a user" do
 			allow(controller).to receive(:logged_in_user).and_return(true)
 			allow(controller).to receive(:current_user).and_return(@user)

 			issue = @isdesc[2].issues[0]
 			issue2 = @isdesc[1].issues[0]
 			userissue1 = create(:user_issue, user_id: @user.id, issue_id: issue.id)
 			
 			get :userissues,id: @pub
 			expect(assigns(:issues).find(issue.id).user_issues.first).to eq(userissue1)
 			expect(assigns(:issues).find(issue2.id).user_issues.first).to be_nil
 		end
 		
 		it "finds the issue linked to correct user when multiple users linked to the same issue" do
 			allow(controller).to receive(:logged_in_user).and_return(true)
 			allow(controller).to receive(:current_user).and_return(@user)

			user2 = create(:user, name: "Test user 2")
			
 			issue = @isdesc[2].issues[0]
 			userissue1 = create(:user_issue, user_id: @user.id, issue_id: issue.id)
 			
 			issue2 = @isdesc[2].issues[0]
 			userissue2 = create(:user_issue, user_id: user2.id, issue_id: issue.id)
 			
 			get :userissues,id: @pub
 			expect(assigns(:issues).find(issue.id).user_issues.first).to eq(userissue1)
 			expect(assigns(:issues).find(issue.id).user_issues.last).to eq(userissue1)
 			
 			allow(controller).to receive(:current_user).and_return(user2)
 			get :userissues,id: @pub
 			expect(assigns(:issues).find(issue.id).user_issues.first).to eq(userissue2)
 		end
 	end
